# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\main.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.mainLayout = QtWidgets.QVBoxLayout(self.centralWidget)
        self.mainLayout.setContentsMargins(0, 0, 0, 0)
        self.mainLayout.setSpacing(0)
        self.mainLayout.setObjectName("mainLayout")
        self.tabs = QtWidgets.QTabWidget(self.centralWidget)
        self.tabs.setObjectName("tabs")
        self.tabFiles = QtWidgets.QWidget()
        self.tabFiles.setObjectName("tabFiles")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tabFiles)
        self.verticalLayout_2.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_2.setSpacing(4)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.filesFilter = QtWidgets.QCheckBox(self.tabFiles)
        self.filesFilter.setObjectName("filesFilter")
        self.verticalLayout_2.addWidget(self.filesFilter)
        self.tableFiles = QtWidgets.QTableWidget(self.tabFiles)
        self.tableFiles.setObjectName("tableFiles")
        self.tableFiles.setColumnCount(6)
        self.tableFiles.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableFiles.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableFiles.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableFiles.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableFiles.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableFiles.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableFiles.setHorizontalHeaderItem(5, item)
        self.tableFiles.horizontalHeader().setDefaultSectionSize(133)
        self.tableFiles.horizontalHeader().setStretchLastSection(True)
        self.verticalLayout_2.addWidget(self.tableFiles)
        self.filesControls = QtWidgets.QHBoxLayout()
        self.filesControls.setObjectName("filesControls")
        self.filesCommitButton = QtWidgets.QPushButton(self.tabFiles)
        self.filesCommitButton.setEnabled(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/svgIcon/check-circle.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.filesCommitButton.setIcon(icon)
        self.filesCommitButton.setObjectName("filesCommitButton")
        self.filesControls.addWidget(self.filesCommitButton)
        self.filesRollbackButton = QtWidgets.QPushButton(self.tabFiles)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/svgIcon/slash.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.filesRollbackButton.setIcon(icon1)
        self.filesRollbackButton.setObjectName("filesRollbackButton")
        self.filesControls.addWidget(self.filesRollbackButton)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.filesControls.addItem(spacerItem)
        self.filesBackButton = QtWidgets.QPushButton(self.tabFiles)
        self.filesBackButton.setEnabled(False)
        self.filesBackButton.setObjectName("filesBackButton")
        self.filesControls.addWidget(self.filesBackButton)
        self.filesPageSize = QtWidgets.QSpinBox(self.tabFiles)
        self.filesPageSize.setMinimum(1)
        self.filesPageSize.setMaximum(1000)
        self.filesPageSize.setProperty("value", 10)
        self.filesPageSize.setObjectName("filesPageSize")
        self.filesControls.addWidget(self.filesPageSize)
        self.filesPerPage = QtWidgets.QLabel(self.tabFiles)
        self.filesPerPage.setObjectName("filesPerPage")
        self.filesControls.addWidget(self.filesPerPage)
        self.filesForwardButton = QtWidgets.QPushButton(self.tabFiles)
        self.filesForwardButton.setObjectName("filesForwardButton")
        self.filesControls.addWidget(self.filesForwardButton)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.filesControls.addItem(spacerItem1)
        self.filesInfo = QtWidgets.QLabel(self.tabFiles)
        self.filesInfo.setObjectName("filesInfo")
        self.filesControls.addWidget(self.filesInfo)
        self.verticalLayout_2.addLayout(self.filesControls)
        self.tabs.addTab(self.tabFiles, "")
        self.tabTables = QtWidgets.QWidget()
        self.tabTables.setObjectName("tabTables")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tabTables)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setSpacing(4)
        self.verticalLayout.setObjectName("verticalLayout")
        self.headerTables = QtWidgets.QLabel(self.tabTables)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.headerTables.setFont(font)
        self.headerTables.setAlignment(QtCore.Qt.AlignCenter)
        self.headerTables.setObjectName("headerTables")
        self.verticalLayout.addWidget(self.headerTables)
        self.tablesFilter = QtWidgets.QCheckBox(self.tabTables)
        self.tablesFilter.setObjectName("tablesFilter")
        self.verticalLayout.addWidget(self.tablesFilter)
        self.tableTables = QtWidgets.QTableWidget(self.tabTables)
        self.tableTables.setObjectName("tableTables")
        self.tableTables.setColumnCount(6)
        self.tableTables.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableTables.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTables.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTables.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTables.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTables.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTables.setHorizontalHeaderItem(5, item)
        self.tableTables.horizontalHeader().setDefaultSectionSize(133)
        self.tableTables.horizontalHeader().setStretchLastSection(True)
        self.verticalLayout.addWidget(self.tableTables)
        self.tablesControls = QtWidgets.QHBoxLayout()
        self.tablesControls.setObjectName("tablesControls")
        self.tablesCommitButton = QtWidgets.QPushButton(self.tabTables)
        self.tablesCommitButton.setEnabled(False)
        self.tablesCommitButton.setIcon(icon)
        self.tablesCommitButton.setObjectName("tablesCommitButton")
        self.tablesControls.addWidget(self.tablesCommitButton)
        self.tablesRollbackButton = QtWidgets.QPushButton(self.tabTables)
        self.tablesRollbackButton.setEnabled(False)
        self.tablesRollbackButton.setIcon(icon1)
        self.tablesRollbackButton.setObjectName("tablesRollbackButton")
        self.tablesControls.addWidget(self.tablesRollbackButton)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.tablesControls.addItem(spacerItem2)
        self.tablesBackButton = QtWidgets.QPushButton(self.tabTables)
        self.tablesBackButton.setEnabled(False)
        self.tablesBackButton.setObjectName("tablesBackButton")
        self.tablesControls.addWidget(self.tablesBackButton)
        self.tablesPageSize = QtWidgets.QSpinBox(self.tabTables)
        self.tablesPageSize.setEnabled(False)
        self.tablesPageSize.setMinimum(1)
        self.tablesPageSize.setMaximum(1000)
        self.tablesPageSize.setProperty("value", 10)
        self.tablesPageSize.setObjectName("tablesPageSize")
        self.tablesControls.addWidget(self.tablesPageSize)
        self.tablesPerPage = QtWidgets.QLabel(self.tabTables)
        self.tablesPerPage.setObjectName("tablesPerPage")
        self.tablesControls.addWidget(self.tablesPerPage)
        self.tablesForwardButton = QtWidgets.QPushButton(self.tabTables)
        self.tablesForwardButton.setEnabled(False)
        self.tablesForwardButton.setObjectName("tablesForwardButton")
        self.tablesControls.addWidget(self.tablesForwardButton)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.tablesControls.addItem(spacerItem3)
        self.tablesInfo = QtWidgets.QLabel(self.tabTables)
        self.tablesInfo.setObjectName("tablesInfo")
        self.tablesControls.addWidget(self.tablesInfo)
        self.verticalLayout.addLayout(self.tablesControls)
        self.tabs.addTab(self.tabTables, "")
        self.tabScript = QtWidgets.QWidget()
        self.tabScript.setObjectName("tabScript")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tabScript)
        self.verticalLayout_3.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_3.setSpacing(4)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.scriptEditWrapper = QtWidgets.QGroupBox(self.tabScript)
        self.scriptEditWrapper.setObjectName("scriptEditWrapper")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.scriptEditWrapper)
        self.verticalLayout_4.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_4.setSpacing(2)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.scriptEdit = QtWidgets.QPlainTextEdit(self.scriptEditWrapper)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        self.scriptEdit.setFont(font)
        self.scriptEdit.setObjectName("scriptEdit")
        self.verticalLayout_4.addWidget(self.scriptEdit)
        self.horizontalLayout.addWidget(self.scriptEditWrapper)
        self.scriptResultWrapper = QtWidgets.QGroupBox(self.tabScript)
        self.scriptResultWrapper.setObjectName("scriptResultWrapper")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.scriptResultWrapper)
        self.verticalLayout_5.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_5.setSpacing(2)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.scriptResult = QtWidgets.QPlainTextEdit(self.scriptResultWrapper)
        self.scriptResult.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        self.scriptResult.setFont(font)
        self.scriptResult.setReadOnly(True)
        self.scriptResult.setObjectName("scriptResult")
        self.verticalLayout_5.addWidget(self.scriptResult)
        self.horizontalLayout.addWidget(self.scriptResultWrapper)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.tabs.addTab(self.tabScript, "")
        self.mainLayout.addWidget(self.tabs)
        MainWindow.setCentralWidget(self.centralWidget)
        self.menu = QtWidgets.QMenuBar(MainWindow)
        self.menu.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menu.setObjectName("menu")
        self.file = QtWidgets.QMenu(self.menu)
        self.file.setObjectName("file")
        self.actions = QtWidgets.QMenu(self.menu)
        self.actions.setObjectName("actions")
        self.help = QtWidgets.QMenu(self.menu)
        self.help.setObjectName("help")
        MainWindow.setMenuBar(self.menu)
        self.toolbar = QtWidgets.QToolBar(MainWindow)
        self.toolbar.setMovable(False)
        self.toolbar.setObjectName("toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbar)
        self.openScript = QtWidgets.QAction(MainWindow)
        self.openScript.setEnabled(False)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/svgIcon/folder.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.openScript.setIcon(icon2)
        self.openScript.setObjectName("openScript")
        self.saveScript = QtWidgets.QAction(MainWindow)
        self.saveScript.setEnabled(False)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/svgIcon/save.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.saveScript.setIcon(icon3)
        self.saveScript.setObjectName("saveScript")
        self.connectToDB = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/svgIcon/database.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.connectToDB.setIcon(icon4)
        self.connectToDB.setObjectName("connectToDB")
        self.execute = QtWidgets.QAction(MainWindow)
        self.execute.setEnabled(False)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/svgIcon/play.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.execute.setIcon(icon5)
        self.execute.setObjectName("execute")
        self.algorithmList = QtWidgets.QAction(MainWindow)
        self.algorithmList.setObjectName("algorithmList")
        self.commandList = QtWidgets.QAction(MainWindow)
        self.commandList.setObjectName("commandList")
        self.clearResults = QtWidgets.QAction(MainWindow)
        self.clearResults.setEnabled(False)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/svgIcon/delete.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.clearResults.setIcon(icon6)
        self.clearResults.setObjectName("clearResults")
        self.addObject = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/svgIcon/plus-circle.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.addObject.setIcon(icon7)
        self.addObject.setObjectName("addObject")
        self.close = QtWidgets.QAction(MainWindow)
        self.close.setObjectName("close")
        self.file.addAction(self.openScript)
        self.file.addAction(self.saveScript)
        self.file.addSeparator()
        self.file.addAction(self.close)
        self.actions.addAction(self.connectToDB)
        self.actions.addSeparator()
        self.actions.addAction(self.addObject)
        self.actions.addSeparator()
        self.actions.addAction(self.execute)
        self.actions.addAction(self.clearResults)
        self.help.addAction(self.algorithmList)
        self.help.addAction(self.commandList)
        self.menu.addAction(self.file.menuAction())
        self.menu.addAction(self.actions.menuAction())
        self.menu.addAction(self.help.menuAction())
        self.toolbar.addAction(self.connectToDB)
        self.toolbar.addSeparator()
        self.toolbar.addAction(self.addObject)
        self.toolbar.addSeparator()
        self.toolbar.addAction(self.openScript)
        self.toolbar.addAction(self.saveScript)
        self.toolbar.addSeparator()
        self.toolbar.addAction(self.execute)
        self.toolbar.addAction(self.clearResults)

        self.retranslateUi(MainWindow)
        self.tabs.setCurrentIndex(0)
        self.filesBackButton.clicked.connect(MainWindow.changePage) # type: ignore
        self.tabs.currentChanged['int'].connect(MainWindow.changeTab) # type: ignore
        self.connectToDB.triggered.connect(MainWindow.handleAction) # type: ignore
        self.execute.triggered.connect(MainWindow.handleAction) # type: ignore
        self.clearResults.triggered.connect(MainWindow.handleAction) # type: ignore
        self.filesForwardButton.clicked.connect(MainWindow.changePage) # type: ignore
        self.tablesBackButton.clicked.connect(MainWindow.changePage) # type: ignore
        self.tablesForwardButton.clicked.connect(MainWindow.changePage) # type: ignore
        self.filesPageSize.editingFinished.connect(MainWindow.changePageSize) # type: ignore
        self.tablesPageSize.editingFinished.connect(MainWindow.changePageSize) # type: ignore
        self.filesRollbackButton.clicked.connect(MainWindow.handleRollback) # type: ignore
        self.tablesRollbackButton.clicked.connect(MainWindow.handleRollback) # type: ignore
        self.filesCommitButton.clicked.connect(MainWindow.handleCommit) # type: ignore
        self.tablesCommitButton.clicked.connect(MainWindow.handleCommit) # type: ignore
        self.addObject.triggered.connect(MainWindow.handleAction) # type: ignore
        self.close.triggered.connect(MainWindow.close) # type: ignore
        self.saveScript.triggered.connect(MainWindow.handleAction) # type: ignore
        self.openScript.triggered.connect(MainWindow.handleAction) # type: ignore
        self.filesFilter.stateChanged['int'].connect(MainWindow.filterTable) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Средство обеспечения целостности"))
        self.filesFilter.setText(_translate("MainWindow", "Только файлы с нарушенной целостностью"))
        item = self.tableFiles.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Файл"))
        item = self.tableFiles.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Алгоритм"))
        item = self.tableFiles.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Контрольная сумма"))
        item = self.tableFiles.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Дата добавления"))
        item = self.tableFiles.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Последнее нарушение"))
        item = self.tableFiles.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Действия"))
        self.filesCommitButton.setText(_translate("MainWindow", "Применить"))
        self.filesRollbackButton.setText(_translate("MainWindow", "Отменить"))
        self.filesBackButton.setText(_translate("MainWindow", "Назад"))
        self.filesPerPage.setText(_translate("MainWindow", "/стр."))
        self.filesForwardButton.setText(_translate("MainWindow", "Вперёд"))
        self.filesInfo.setText(_translate("MainWindow", "Страница 0 из 0. Всего записей: 0"))
        self.tabs.setTabText(self.tabs.indexOf(self.tabFiles), _translate("MainWindow", "Файлы"))
        self.headerTables.setText(_translate("MainWindow", "Текущая база данных: подключение отсутствует"))
        self.tablesFilter.setText(_translate("MainWindow", "Только таблицы с нарушением целостности"))
        item = self.tableTables.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Таблица"))
        item = self.tableTables.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Алгоритм"))
        item = self.tableTables.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Контрольная сумма"))
        item = self.tableTables.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Дата добавления"))
        item = self.tableTables.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Целостность"))
        item = self.tableTables.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Действия"))
        self.tablesCommitButton.setText(_translate("MainWindow", "Применить"))
        self.tablesRollbackButton.setText(_translate("MainWindow", "Отменить"))
        self.tablesBackButton.setText(_translate("MainWindow", "Назад"))
        self.tablesPerPage.setText(_translate("MainWindow", "/стр."))
        self.tablesForwardButton.setText(_translate("MainWindow", "Вперёд"))
        self.tablesInfo.setText(_translate("MainWindow", "Страница 0 из 0. Всего записей: 0"))
        self.tabs.setTabText(self.tabs.indexOf(self.tabTables), _translate("MainWindow", "Таблицы"))
        self.scriptEditWrapper.setTitle(_translate("MainWindow", "Скрипт"))
        self.scriptResultWrapper.setTitle(_translate("MainWindow", "Результаты"))
        self.tabs.setTabText(self.tabs.indexOf(self.tabScript), _translate("MainWindow", "Скрипт"))
        self.file.setTitle(_translate("MainWindow", "Файл"))
        self.actions.setTitle(_translate("MainWindow", "Действия"))
        self.help.setTitle(_translate("MainWindow", "Справка"))
        self.toolbar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.openScript.setText(_translate("MainWindow", "Открыть скрипт"))
        self.openScript.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.saveScript.setText(_translate("MainWindow", "Сохранить скрипт"))
        self.saveScript.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.connectToDB.setText(_translate("MainWindow", "Соединиться с базой данных"))
        self.connectToDB.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.execute.setText(_translate("MainWindow", "Выполнить скрипт"))
        self.execute.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.algorithmList.setText(_translate("MainWindow", "Список алгоритмов"))
        self.algorithmList.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.commandList.setText(_translate("MainWindow", "Список команд ПОЯ"))
        self.commandList.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.clearResults.setText(_translate("MainWindow", "Очистить поле результатов"))
        self.clearResults.setToolTip(_translate("MainWindow", "Очистить поле результатов"))
        self.clearResults.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.addObject.setText(_translate("MainWindow", "Добавить объект"))
        self.addObject.setToolTip(_translate("MainWindow", "Добавить файл или таблицу"))
        self.addObject.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.close.setText(_translate("MainWindow", "Закрыть"))
from gui import main_rc
